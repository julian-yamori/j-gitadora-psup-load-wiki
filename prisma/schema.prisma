generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Track {
  id        String     @id
  title     String     @unique
  artist    String
  skillType Int
  long      Boolean
  openType  Int
  sortTitle String?
  deleted   Boolean
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  scores    Score[]
  userTrack UserTrack?
}

model Score {
  trackId    String
  difficulty Int
  lv         Float
  track      Track      @relation(fields: [trackId], references: [id])
  userScore  UserScore?

  @@unique([trackId, difficulty])
}

model UserTrack {
  id        String      @id
  like      Int?
  isOpen    Boolean
  memo      String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  scores    UserScore[]
  track     Track       @relation(fields: [id], references: [id])
}

model UserScore {
  trackId         String
  difficulty      Int
  achievement     Float
  failed          Boolean
  skillPoint      Float
  wishPractice    Boolean
  wishAchievement Boolean
  wishEvent       Boolean
  wishNextPick    Boolean
  wishPlayed      Boolean
  movieURL        String
  score           Score     @relation(fields: [trackId, difficulty], references: [trackId, difficulty])
  userTrack       UserTrack @relation(fields: [trackId], references: [id])

  @@unique([trackId, difficulty])
}

model WikiLoadingIssue {
  id           String                  @id
  type         String
  source       String?
  rowNo        Int?
  errorMessage String?
  diffirences  WikiLoadingDiffirence[]
  track        WikiLoadingNewTrack?
}

model WikiLoadingNewTrack {
  id        String                @id
  title     String
  artist    String
  skillType Int
  long      Boolean
  openType  Int
  scores    WikiLoadingNewScore[]
  issue     WikiLoadingIssue      @relation(fields: [id], references: [id])
}

model WikiLoadingNewScore {
  trackId    String
  difficulty Int
  lv         Float
  track      WikiLoadingNewTrack @relation(fields: [trackId], references: [id])

  @@unique([trackId, difficulty])
}

model WikiLoadingDiffirence {
  id           String           @id
  issueId      String
  propertyName String
  difficulty   Int?
  oldValue     String?
  newValue     String?
  issue        WikiLoadingIssue @relation(fields: [issueId], references: [id])
}
